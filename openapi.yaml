openapi: 3.0.3
info:
  version: 1.0.0
  title: Admin Proxy App API Definition
  description: Admin Proxy App helps to route requests from UI to the backend services, which will be user service and points service in this case.
tags:
  - name: Users
    description: Operations related to Users
  - name: User Roles
    description: Operations related to User Roles for RBAC
  - name: Points Account
    description: Operations related to Points Account
servers:
  - url: localhost:3000
    description: The production Admin Proxy App server
paths:
  /api/users:
    get:
      summary: List all users
      tags:
        - Users
      responses:
        "200":
          description: All the users that exist in Users DB
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Users"
      responses:
        "200":
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/users/{id}:
    get:
      summary: Get user by ID
      tags:
        - Users
      parameters:
        - name: id
          description: The unique identifier for a user
          required: true
          in: path
          schema:
            $ref: "#/components/schemas/UserId"
      responses:
        "200":
          description: User details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update user by ID
      tags:
        - Users
      parameters:
        - name: id
          description: The unique identifier for a user
          required: true
          in: path
          schema:
            $ref: "#/components/schemas/UserId"
      responses:
        "200":
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete user by ID
      tags:
        - Users
      parameters:
        - name: id
          description: The unique identifier for a user
          required: true
          in: path
          schema:
            $ref: "#/components/schemas/UserId"
      responses:
        "200":
          description: User deleted successfully
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/users/roles:
    get:
      summary: List all roles
      tags:
        - User Roles
      responses:
        "200":
          description: List of all roles
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Roles"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new role
      tags:
        - User Roles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Roles"
      responses:
        "200":
          description: Role created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Roles"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/users/roles/{id}:
    put:
      summary: Update role by ID
      tags:
        - User Roles
      parameters:
        - name: id
          description: The unique identifier for a role
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Role updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Roles"
        "404":
          description: Role not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete role by ID
      tags:
        - User Roles
      parameters:
        - name: id
          description: The unique identifier for a role
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: Role deleted successfully
        "404":
          description: Role not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/points:
    post:
      summary: Create a new point account
      tags:
        - Points Account
      responses:
        "200":
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PointsAccount"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/points/{id}:
    get:
      summary: Get point account by account ID
      tags:
        - Points Account
      parameters:
        - name: id
          description: The unique identifier for a point account
          required: true
          in: path
          schema:
            $ref: "#/components/schemas/PointAccountId"
      responses:
        "200":
          description: Point account details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PointsAccount"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update point account by accound ID
      tags:
        - Points Account
      parameters:
        - name: id
          description: The unique identifier for a point account
          required: true
          in: path
          schema:
            $ref: "#/components/schemas/PointAccountId"
      responses:
        "200":
          description: Point account updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PointsAccount"
        "404":
          description: Point account not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete point account by account ID
      tags:
        - Points Account
      parameters:
        - name: id
          description: The unique identifier for a point account
          required: true
          in: path
          schema:
            $ref: "#/components/schemas/PointAccountId"
      responses:
        "200":
          description: User deleted successfully
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    UserId:
      type: string
      description: Unique identifier for a user (UUID)
      example: da7da4ff-f10c-4b89-ab64-ea7263f6b624
    PointAccountId:
      type: string
      description: Unique identifier for a point account (UUID)
      example: da7da4ff-f10c-4b89-ab64-ea7263f6b624
    Users:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        point_accounts:
          type: array
          items:
            type: string
        role_id:
          type: string
    PointsAccount:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        balance:
          type: number
    Roles:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        user_storage_permission:
          type: number
        point_ledger_permission:
          type: number
        log_permission:
          type: number
    Error:
      type: object
      properties:
        message:
          type: string
